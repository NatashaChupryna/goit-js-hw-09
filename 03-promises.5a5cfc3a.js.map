{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GACZ,IAAIC,SAAQ,SAACC,EAASC,GACvC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACT,OAAIH,EACKF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAE3BA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAhB,GAASiB,OAAOI,QAAQ,sBAAuCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IApD9DS,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAON,IALA,IAAMC,EAAW,CACfd,MAAOe,OAAOH,EAAMI,cAAchB,MAAMiB,OACxCC,KAAMH,OAAOH,EAAMI,cAAcE,KAAKD,OACtCE,OAAQJ,OAAOH,EAAMI,cAAcG,OAAOF,QAEnCG,EAAI,EAAGA,EAAIN,EAASK,OAAQC,GAAK,EAC3C/B,EAAc+B,EAAGN,EAASd,OAC1Bc,EAASd,OAASc,EAASI,I,IA2C3BG,WAAWpB,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAC3BG,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IACrEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACpBG,EAAAhB,GAASiB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const userData = {\n    delay: Number(event.currentTarget.delay.value),\n    step: Number(event.currentTarget.step.value),\n    amount: Number(event.currentTarget.amount.value),\n  };\n  for (let i = 0; i < userData.amount; i += 1) {\n createPromise(i, userData.delay);\n userData.delay += userData.step;\n  }\n}\n\n// function createPromise(position, delay) {\n//   return new newPromise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         // Fulfill\n//         return  reject({ position, delay });\n//       } else {\n//         // Reject\n//         return reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\nfunction createPromise(position, delay) {\n  const newPromise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve({ position, delay });\n      } else {\n        return reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  newPromise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n\n newPromise.then(({ position, delay }) => {\n   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n }).catch(({ position, delay }) => {\n   Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","document","querySelector","addEventListener","event","preventDefault","userData","Number","currentTarget","value","step","amount","i","newPromise"],"version":3,"file":"03-promises.5a5cfc3a.js.map"}