{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GACZ,IAAIC,SAAQ,CAACC,EAASC,KACvC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,IACLH,EACKF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,KAE3BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAf,GAASgB,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAEzEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBP,QAAeC,MAAU,G,CApD9DO,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAW,CACfZ,MAAOa,OAAOH,EAAMI,cAAcd,MAAMe,OACxCC,KAAMH,OAAOH,EAAMI,cAAcE,KAAKD,OACtCE,OAAQJ,OAAOH,EAAMI,cAAcG,OAAOF,QAE5C,IAAK,IAAIG,EAAI,EAAGA,EAAIN,EAASK,OAAQC,GAAK,EAC3C7B,EAAc6B,EAAGN,EAASZ,OAC1BY,EAASZ,OAASY,EAASI,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const userData = {\n    delay: Number(event.currentTarget.delay.value),\n    step: Number(event.currentTarget.step.value),\n    amount: Number(event.currentTarget.amount.value),\n  };\n  for (let i = 0; i < userData.amount; i += 1) {\n createPromise(i, userData.delay);\n userData.delay += userData.step;\n  }\n}\n\n// function createPromise(position, delay) {\n//   return new newPromise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         // Fulfill\n//         return  reject({ position, delay });\n//       } else {\n//         // Reject\n//         return reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\nfunction createPromise(position, delay) {\n  const newPromise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve({ position, delay });\n      } else {\n        return reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  newPromise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","event","preventDefault","userData","Number","currentTarget","value","step","amount","i"],"version":3,"file":"03-promises.7036e28e.js.map"}